services:

  db:
    image: postgres:14
    container_name: db
    ports: 
      - "5433:5432"
    env_file: .env
    networks:
      - app-network
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build: .
    container_name: backend
    expose:
      - "8000"
    env_file: .env
    depends_on: 
      db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:  # Проверка здоровья бэкенда
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./frontend:/usr/share/nginx/html
    depends_on:
      - backend
    networks:
      - app-network
    restart: unless-stopped

networks:
  app-network:
    name: app-network
    driver: bridge

volumes:
  postgres_data: